# === Core System ===
[force_move]
enable_force_move: True 


# === Includes ===
[include KAMP_Settings.cfg]


[include mainsail.cfg]

# Enable cancel-by-object functionality during prints.


# === Core System ===
[exclude_object]


# === Includes ===
[include Macros/START_PRINT.cfg]

[include Macros/END_PRINT.cfg]

[include Macros/FILAMENT_CHANGE.cfg]

[include Macros/PAUSE.cfg]

[include Macros/RESUME.cfg]

[include Macros/CANCEL_PRINT.cfg]

[include Macros/PID_TUNE_BED.cfg]

[include Macros/PID_TUNE_EXTRUDER.cfg]

[include Macros/UNLOAD_FILAMENT.cfg]

[include Macros/LOAD_FILAMENT.cfg]

[include Macros/RESONANCE_Y_TEST.cfg]

[include Macros/RESONANCE_X_TEST.cfg]

# === ADXL ===

#[include ADXL/BTT_ADXL_Y.cfg]
#[include ADXL/MELLOW_ADXL_X.cfg]



# === Motion System ===
[stepper_x]
# Stepper motor X
step_pin: gpio11                                #GPIO pin for step pulses to driver
dir_pin: !gpio10                                #GPIO pin for motor direction ('!' inverts)
enable_pin: !gpio12                             #GPIO pin to enable/disable the driver ('!' inverts)
microsteps: 16                                  #Microstepping setting (e.g., 16 = 1/16 step)
rotation_distance: 40                           #Linear travel per full motor revolution (mm/rev)
# endstop_pin: ^gpio4
endstop_pin: tmc2209_stepper_x:virtual_endstop  #Endstop input; can be physical (e.g., ^gpioX) or TMC virtual_endstop | Sensorless homing active — verify SGTHRS and homing speeds
homing_retract_dist: 0.0                        #Backoff distance after first endstop/probe trigger
position_endstop: 0                             #Axis position assigned when homed
position_max: 180                               #Maximum travel for the axis (soft limit)
homing_speed: 50                                #Speed used while homing (mm/s) | If sensorless: don’t home too fast; start ~40–60 mm/s X/Y

# Tip: X/Y sensorless homing — tune driver_SGTHRS with gentle bump into the rail;
#       ensure motors are not skipping during fast homing. Belt tension affects threshold.


[tmc2209 stepper_x]
# TMC2209 driver for X
uart_pin: gpio9                #UART RX pin for TMC2209 communication
tx_pin: gpio8                  #UART TX pin for TMC2209 communication
uart_address: 0                #Address on shared UART bus (0..3)
run_current: 0.8               #Driver RMS current (A) for motor | Motor RMS current — raise if skipping, lower if too hot/noisy
driver_TBL: 1                  #TMC chopper: blank time
driver_TOFF: 3                 #TMC chopper: off time
driver_HEND: 3                 #TMC chopper: hysteresis end
driver_HSTRT: 0                #TMC chopper: hysteresis start
stealthchop_threshold: 999999  #Speed threshold for StealthChop (very high = always on) | Very high value = always StealthChop; reduce if you want SpreadCycle at speed
diag_pin: ^gpio4               #Driver DIAG (stall) pin; '^' = pull-up
driver_SGTHRS: 100             #StallGuard threshold (sensorless homing sensitivity) | Sensorless sensitivity: raise for more sensitivity; too low = no trigger, too high = false triggers


[stepper_y]
# Stepper motor Y
step_pin: gpio6                                 #GPIO pin for step pulses to driver
dir_pin: gpio5                                  #GPIO pin for motor direction ('!' inverts)
enable_pin: !gpio7                              #GPIO pin to enable/disable the driver ('!' inverts)
microsteps: 16                                  #Microstepping setting (e.g., 16 = 1/16 step)
rotation_distance: 40                           #Linear travel per full motor revolution (mm/rev)
# endstop_pin: ^gpio3
endstop_pin: tmc2209_stepper_y:virtual_endstop  #Endstop input; can be physical (e.g., ^gpioX) or TMC virtual_endstop | Sensorless homing active — verify SGTHRS and homing speeds
homing_retract_dist: 0                          #Backoff distance after first endstop/probe trigger
position_endstop: 0                             #Axis position assigned when homed
position_max: 180                               #Maximum travel for the axis (soft limit)
homing_speed: 50                                #Speed used while homing (mm/s) | If sensorless: don’t home too fast; start ~40–60 mm/s X/Y

# Tip: X/Y sensorless homing — tune driver_SGTHRS with gentle bump into the rail;
#       ensure motors are not skipping during fast homing. Belt tension affects threshold.


[tmc2209 stepper_y]
# TMC2209 driver for Y
uart_pin: gpio9                #UART RX pin for TMC2209 communication
tx_pin: gpio8                  #UART TX pin for TMC2209 communication
uart_address: 2                #Address on shared UART bus (0..3)
run_current: 0.8               #Driver RMS current (A) for motor | Motor RMS current — raise if skipping, lower if too hot/noisy
driver_TBL: 1                  #TMC chopper: blank time
driver_TOFF: 3                 #TMC chopper: off time
driver_HEND: 3                 #TMC chopper: hysteresis end
driver_HSTRT: 0                #TMC chopper: hysteresis start
stealthchop_threshold: 999999  #Speed threshold for StealthChop (very high = always on) | Very high value = always StealthChop; reduce if you want SpreadCycle at speed
diag_pin: ^gpio3               #Driver DIAG (stall) pin; '^' = pull-up
driver_SGTHRS: 100             #StallGuard threshold (sensorless homing sensitivity) | Sensorless sensitivity: raise for more sensitivity; too low = no trigger, too high = false triggers


[stepper_z]
# Stepper motor Z
step_pin: gpio19                       #GPIO pin for step pulses to driver
dir_pin: !gpio28                       #GPIO pin for motor direction ('!' inverts)
enable_pin: !gpio2                     #GPIO pin to enable/disable the driver ('!' inverts)
microsteps: 16                         #Microstepping setting (e.g., 16 = 1/16 step)
rotation_distance: 4                   #Linear travel per full motor revolution (mm/rev)
# endstop_pin: ^gpio25
# position_endstop: 0
endstop_pin: probe: z_virtual_endstop  #Endstop input; can be physical (e.g., ^gpioX) or TMC virtual_endstop
position_min: -2.0
position_max: 175                      #Maximum travel for the axis (soft limit)
homing_speed: 15                       #Speed used while homing (mm/s) | If sensorless: don’t home too fast; start ~40–60 mm/s X/Y

# Tip: Z usually uses a probe/endstop; sensorless on Z is uncommon due to risk of lead-screw binding.


[tmc2209 stepper_z]
# TMC2209 driver for Z
uart_pin: gpio9                #UART RX pin for TMC2209 communication
tx_pin: gpio8                  #UART TX pin for TMC2209 communication
uart_address: 1                #Address on shared UART bus (0..3)
run_current: 0.8               #Driver RMS current (A) for motor | Motor RMS current — raise if skipping, lower if too hot/noisy
driver_TBL: 1                  #TMC chopper: blank time
driver_TOFF: 3                 #TMC chopper: off time
driver_HEND: 3                 #TMC chopper: hysteresis end
driver_HSTRT: 0                #TMC chopper: hysteresis start
stealthchop_threshold: 999999  #Speed threshold for StealthChop (very high = always on) | Very high value = always StealthChop; reduce if you want SpreadCycle at speed

# Z probe used for homing/leveling; offsets and probing behavior.


# === Misc Features ===
[probe]
# Z probe
pin: gpio22             #GPIO pin for this device
x_offset: -29.8         #Probe offset from nozzle in X (mm)
y_offset: -13.5         #Probe offset from nozzle in Y (mm)
#z_offset: 0.5
samples: 1              #Number of samples per probe point
samples_result: median
sample_retract_dist: 3  #Retract distance between samples (mm)
samples_tolerance: 0.01
samples_tolerance_retries: 3

# Define bed probing grid and how compensation is applied.
# Tip: Mesh area should leave a small margin from printable area to avoid probe falling off the edge.


[bed_mesh]
# Bed leveling mesh
speed: 150           #Speed for the move (mm/s)
horizontal_move_z: 5
mesh_min: 0,5        #Lower-left mesh corner (X,Y)
mesh_max: 150,150    #Upper-right mesh corner (X,Y)
probe_count: 4,4     #Number of probe points (X,Y) over bed
fade_start: 1.0      #Z-height where mesh compensation begins to fade out
fade_end: 10.0       #Z-height where compensation fully ends
mesh_pps: 2,2
algorithm: bicubic   #Mesh interpolation algorithm
bicubic_tension: .2  #Tension parameter when using bicubic

# Probe around bed screws and report how much to turn them.


[screws_tilt_adjust]
screw1: 140, 40 
screw1_name: Front Right Screw
screw2: 30,90 
screw2_name: Left Screw
screw3: 150, 150
screw3_name: Rear Right Screw
horizontal_move_z: 10
speed: 150  #Speed for the move (mm/s)
screw_thread: CCW-M4

# Home Z at a safe XY location (usually center) using the probe.


[safe_z_home]
# Safe Z homing (center of bed)
home_xy_position: 92.5,92  #XY position to move before Z homing (safe-Z-home)
speed: 50.0                #Speed for the move (mm/s)
z_hop: 5                   #Temporary Z lift to avoid collisions (mm)

# Extruder drive and hotend heater/thermistor settings.
# Tip: Dragonfly BMO + LGX Lite — check retraction 0.4–0.8 mm @ 25–35 mm/s to avoid stringing/heat-creep;
#      run a PID tune at your most-used temp and verify cooling doesn’t destabilize PID.


# === Heaters & Sensors ===
[extruder]
# Extruder and hotend
step_pin: gpio14                    #GPIO pin for step pulses to driver
dir_pin: gpio13                     #GPIO pin for motor direction ('!' inverts)
enable_pin: !gpio15                 #GPIO pin to enable/disable the driver ('!' inverts)
microsteps: 16                      #Microstepping setting (e.g., 16 = 1/16 step)
nozzle_diameter: 0.4                #Nozzle orifice diameter (mm) | Match your actual nozzle; affects extrusion width and flow limits
max_extrude_only_distance: 200
max_extrude_cross_section: 5
min_temp: 0                         #Minimum sensor temperature (valid range)
max_temp: 300                       #Maximum sensor temperature (valid range) | Safety limit: ensure matches your thermistor & hotend capability
pressure_advance: 0.03              #Compensation for extrusion pressure lag (s) | Start 0.02–0.06 for LGX Lite; calibrate with PA test tower
rotation_distance: 5.57             #Linear travel per full motor revolution (mm/rev)
full_steps_per_rotation: 200
filament_diameter: 1.750            #Filament diameter (mm) | 1.75 mm typical; slicer flow calibration depends on this
max_extrude_only_velocity: 120
max_extrude_only_accel: 800
pressure_advance_smooth_time: 0.02  #Smoothing window for PA (s)
heater_pin: gpio23                  #Heater MOSFET output pin | Double-check correct output; wrong pin risks runaway or no heat
sensor_type: Generic 3950           #Thermistor/thermocouple type model for ADC conversion | Critical: must match your thermistor/TC; wrong type misreads temps
# sensor_type: NTC 100K MGB18-104F39050L32
# sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio27                  #ADC input pin for the temperature sensor | ADC input for the thermistor/TC amplifier; ensure wiring is solid

# G10/G11 firmware retraction parameters.


# === Other ===
[firmware_retraction]
retract_speed: 120         #Retraction speed (mm/s)
unretract_extra_length: 0  #Extra filament on unretract (mm)
unretract_speed: 120       #Unretract speed (mm/s)
retract_length: 0.5



# === Motion System ===
[tmc2209 extruder]
# TMC2209 driver for extruder
uart_pin: gpio9                #UART RX pin for TMC2209 communication
tx_pin: gpio8                  #UART TX pin for TMC2209 communication
uart_address: 3                #Address on shared UART bus (0..3)
run_current: 0.650             #Driver RMS current (A) for motor | Motor RMS current — raise if skipping, lower if too hot/noisy
hold_current: 0.500
stealthchop_threshold: 999999  #Speed threshold for StealthChop (very high = always on) | Very high value = always StealthChop; reduce if you want SpreadCycle at speed

#[filament_switch_sensor runout_sensor]
#switch_pin: ^gpio16
#pause_on_runout: True

# [filament_motion_sensor smart_sensor]
# switch_pin: ^gpio16
# detection_length: 2.5

# Heated bed heater and thermistor configuration.


# === Heaters & Sensors ===
[heater_bed]
# Heated bed
heater_pin: gpio21                        #Heater MOSFET output pin | Double-check correct output; wrong pin risks runaway or no heat
sensor_type: NTC 100K MGB18-104F39050L32  #Thermistor/thermocouple type model for ADC conversion | Critical: must match your thermistor/TC; wrong type misreads temps
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26                        #ADC input pin for the temperature sensor | ADC input for the thermistor/TC amplifier; ensure wiring is solid
min_temp: 0                               #Minimum sensor temperature (valid range)
max_temp: 120                             #Maximum sensor temperature (valid range) | Safety limit: ensure matches your thermistor & hotend capability

# Part-cooling fan (M106/M107).


[fan]
# Part cooling fan
pin: gpio17  #GPIO pin for this device

# Heatsink fan that turns on with hotend temperature.
# Tip: Set a sensible 'heater' and 'heater_temp' so the heatsink fan always runs when hotend is warm (>50°C).


# === Other ===
[heater_fan hotend_fan]
pin: gpio18       #GPIO pin for this device
heater: extruder  #Associated heater for an automatic heater_fan | Fan will auto-run when hotend is above heater_temp
heater_temp: 50.0

# Case/MCU fan controlled by temperature feedback.
# Tip: Use the MCU or chamber sensor to govern electronics fan; prevents Pi/MCU overheating on long prints.


[temperature_fan controller_fan]
pin: gpio20                    #GPIO pin for this device
control: watermark             #Temperature control mode (pid|watermark|bang-bang)
sensor_type: temperature_host  #Thermistor/thermocouple type model for ADC conversion | Critical: must match your thermistor/TC; wrong type misreads temps
min_temp: 10                   #Minimum sensor temperature (valid range)
max_temp: 60                   #Maximum sensor temperature (valid range) | Safety limit: ensure matches your thermistor & hotend capability
target_temp: 31                #Temperature that triggers or regulates the fan
max_power: 1.0                 #ensure full speed is available
shutdown_speed: 0              #fan off on shutdown

# Temperature sensor for monitoring.


[temperature_sensor raspberry_pi]
sensor_type: temperature_host  #Thermistor/thermocouple type model for ADC conversion | Critical: must match your thermistor/TC; wrong type misreads temps
min_temp: 0                    #Minimum sensor temperature (valid range)
max_temp: 100                  #Maximum sensor temperature (valid range) | Safety limit: ensure matches your thermistor & hotend capability

# Temperature sensor for monitoring.


[temperature_sensor SKR_Pico]
sensor_type: temperature_mcu  #Thermistor/thermocouple type model for ADC conversion | Critical: must match your thermistor/TC; wrong type misreads temps
min_temp: 0                   #Minimum sensor temperature (valid range)
max_temp: 100                 #Maximum sensor temperature (valid range) | Safety limit: ensure matches your thermistor & hotend capability

# Microcontroller connection settings.


# === Core System ===
[mcu]
# Main microcontroller
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E66094A027854422-if00
serial: /dev/ttyAMA0     #Serial device path for the MCU
restart_method: command  #How Klipper resets the MCU (e.g., command)


# === Resonance tester (for input shaper) ===
# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#      90,90,10      # safe location above the bed center
# min_freq: 5
# max_freq: 133
# accel_per_hz: 75


# Global motion limits and kinematics.


[printer]
# General printer settings
kinematics: cartesian        #Printer motion type (cartesian/corexy/etc.)
max_velocity: 250            #Overall speed limit (mm/s) | Raise carefully after input-shaper; verify steppers don’t skip
max_accel: 3000              #Overall acceleration limit (mm/s^2) | Tune after input-shaper; too high causes ringing/layer shifts
max_z_velocity: 15           #Z axis speed limit (mm/s)
max_z_accel: 60              #Z axis acceleration limit (mm/s^2)
square_corner_velocity: 5.0  #Jerk-like cornering parameter (mm/s) | Jerk-like setting; higher = snappier corners but more ringing

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29

#[neopixel board_rgb]
#pin: gpio24
#chain_count: 1
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.012500, -0.011250, -0.008750
#*# 	0.003750, -0.012500, -0.016250
#*# 	0.015000, -0.006250, -0.006250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 70.0
#*# max_x = 110.0
#*# min_y = 80.0
#*# max_y = 100.0
#*#
#*# [probe]
#*# z_offset = 0.650
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.918
#*# pid_ki = 2.151
#*# pid_kd = 460.084
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.398
#*# pid_ki = 0.778
#*# pid_kd = 97.209
#*#
#*# [input_shaper]
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 60.6
#*# shaper_type_x = mzv
#*# shaper_freq_x = 80.4
